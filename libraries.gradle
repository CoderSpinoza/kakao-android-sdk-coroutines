apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion project.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.versionCode
        versionName project.ext.versionName

//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'

    implementation  "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    api 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.1.1'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.1.1'
    testImplementation 'org.robolectric:robolectric:3.7.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    testImplementation 'org.mockito:mockito-core:2.9.0'
    testImplementation 'org.mockito:mockito-inline:2.9.0'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
}